// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package randomlogin

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-go-provider/examples/random-login/sdk/go/randomlogin/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MoreRandomPassword struct {
	pulumi.ResourceState

	Length   pulumi.IntOutput    `pulumi:"length"`
	Password pulumi.StringOutput `pulumi:"password"`
}

// NewMoreRandomPassword registers a new resource with the given unique name, arguments, and options.
func NewMoreRandomPassword(ctx *pulumi.Context,
	name string, args *MoreRandomPasswordArgs, opts ...pulumi.ResourceOption) (*MoreRandomPassword, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Length == nil {
		return nil, errors.New("invalid value for required argument 'Length'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MoreRandomPassword
	err := ctx.RegisterRemoteComponentResource("random-login:index:MoreRandomPassword", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type moreRandomPasswordArgs struct {
	Length int `pulumi:"length"`
}

// The set of arguments for constructing a MoreRandomPassword resource.
type MoreRandomPasswordArgs struct {
	Length pulumi.IntInput
}

func (MoreRandomPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*moreRandomPasswordArgs)(nil)).Elem()
}

type MoreRandomPasswordInput interface {
	pulumi.Input

	ToMoreRandomPasswordOutput() MoreRandomPasswordOutput
	ToMoreRandomPasswordOutputWithContext(ctx context.Context) MoreRandomPasswordOutput
}

func (*MoreRandomPassword) ElementType() reflect.Type {
	return reflect.TypeOf((**MoreRandomPassword)(nil)).Elem()
}

func (i *MoreRandomPassword) ToMoreRandomPasswordOutput() MoreRandomPasswordOutput {
	return i.ToMoreRandomPasswordOutputWithContext(context.Background())
}

func (i *MoreRandomPassword) ToMoreRandomPasswordOutputWithContext(ctx context.Context) MoreRandomPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoreRandomPasswordOutput)
}

type MoreRandomPasswordOutput struct{ *pulumi.OutputState }

func (MoreRandomPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoreRandomPassword)(nil)).Elem()
}

func (o MoreRandomPasswordOutput) ToMoreRandomPasswordOutput() MoreRandomPasswordOutput {
	return o
}

func (o MoreRandomPasswordOutput) ToMoreRandomPasswordOutputWithContext(ctx context.Context) MoreRandomPasswordOutput {
	return o
}

func (o MoreRandomPasswordOutput) Length() pulumi.IntOutput {
	return o.ApplyT(func(v *MoreRandomPassword) pulumi.IntOutput { return v.Length }).(pulumi.IntOutput)
}

func (o MoreRandomPasswordOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *MoreRandomPassword) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MoreRandomPasswordInput)(nil)).Elem(), &MoreRandomPassword{})
	pulumi.RegisterOutputType(MoreRandomPasswordOutput{})
}
