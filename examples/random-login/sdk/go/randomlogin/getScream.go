// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package randomlogin

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-go-provider/examples/random-login/sdk/go/randomlogin/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GetScream returns the Scream provider config setting
func GetScream(ctx *pulumi.Context, args *GetScreamArgs, opts ...pulumi.InvokeOption) (*GetScreamResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetScreamResult
	err := ctx.Invoke("random-login:index:getScream", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetScreamArgs struct {
}

type GetScreamResult struct {
	Scream bool `pulumi:"scream"`
}

func GetScreamOutput(ctx *pulumi.Context, args GetScreamOutputArgs, opts ...pulumi.InvokeOption) GetScreamResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetScreamResultOutput, error) {
			args := v.(GetScreamArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("random-login:index:getScream", args, GetScreamResultOutput{}, options).(GetScreamResultOutput), nil
		}).(GetScreamResultOutput)
}

type GetScreamOutputArgs struct {
}

func (GetScreamOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScreamArgs)(nil)).Elem()
}

type GetScreamResultOutput struct{ *pulumi.OutputState }

func (GetScreamResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScreamResult)(nil)).Elem()
}

func (o GetScreamResultOutput) ToGetScreamResultOutput() GetScreamResultOutput {
	return o
}

func (o GetScreamResultOutput) ToGetScreamResultOutputWithContext(ctx context.Context) GetScreamResultOutput {
	return o
}

func (o GetScreamResultOutput) Scream() pulumi.BoolOutput {
	return o.ApplyT(func(v GetScreamResult) bool { return v.Scream }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(GetScreamResultOutput{})
}
