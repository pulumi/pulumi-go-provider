// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package randomlogin

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-go-provider/examples/random-login/sdk/go/randomlogin/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RandomLogin struct {
	pulumi.ResourceState

	Password       pulumi.StringOutput `pulumi:"password"`
	PasswordLength pulumi.IntOutput    `pulumi:"passwordLength"`
	PetName        pulumi.BoolOutput   `pulumi:"petName"`
	Username       pulumi.StringOutput `pulumi:"username"`
}

// NewRandomLogin registers a new resource with the given unique name, arguments, and options.
func NewRandomLogin(ctx *pulumi.Context,
	name string, args *RandomLoginArgs, opts ...pulumi.ResourceOption) (*RandomLogin, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PasswordLength == nil {
		return nil, errors.New("invalid value for required argument 'PasswordLength'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RandomLogin
	err := ctx.RegisterRemoteComponentResource("random-login:index:RandomLogin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type randomLoginArgs struct {
	PasswordLength int  `pulumi:"passwordLength"`
	PetName        bool `pulumi:"petName"`
}

// The set of arguments for constructing a RandomLogin resource.
type RandomLoginArgs struct {
	PasswordLength pulumi.IntInput
	PetName        bool
}

func (RandomLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*randomLoginArgs)(nil)).Elem()
}

type RandomLoginInput interface {
	pulumi.Input

	ToRandomLoginOutput() RandomLoginOutput
	ToRandomLoginOutputWithContext(ctx context.Context) RandomLoginOutput
}

func (*RandomLogin) ElementType() reflect.Type {
	return reflect.TypeOf((**RandomLogin)(nil)).Elem()
}

func (i *RandomLogin) ToRandomLoginOutput() RandomLoginOutput {
	return i.ToRandomLoginOutputWithContext(context.Background())
}

func (i *RandomLogin) ToRandomLoginOutputWithContext(ctx context.Context) RandomLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RandomLoginOutput)
}

type RandomLoginOutput struct{ *pulumi.OutputState }

func (RandomLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RandomLogin)(nil)).Elem()
}

func (o RandomLoginOutput) ToRandomLoginOutput() RandomLoginOutput {
	return o
}

func (o RandomLoginOutput) ToRandomLoginOutputWithContext(ctx context.Context) RandomLoginOutput {
	return o
}

func (o RandomLoginOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *RandomLogin) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

func (o RandomLoginOutput) PasswordLength() pulumi.IntOutput {
	return o.ApplyT(func(v *RandomLogin) pulumi.IntOutput { return v.PasswordLength }).(pulumi.IntOutput)
}

func (o RandomLoginOutput) PetName() pulumi.BoolOutput {
	return o.ApplyT(func(v *RandomLogin) pulumi.BoolOutput { return v.PetName }).(pulumi.BoolOutput)
}

func (o RandomLoginOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *RandomLogin) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RandomLoginInput)(nil)).Elem(), &RandomLogin{})
	pulumi.RegisterOutputType(RandomLoginOutput{})
}
