// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/pulumi/pulumi-go-provider/examples/configurable (interfaces: client)
//
// Generated by this command:
//
//	mockgen -typed -package main -destination mocks.gen.go -imports goprovider=github.com/pulumi/pulumi-go-provider . client
//

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// Mockclient is a mock of client interface.
type Mockclient struct {
	ctrl     *gomock.Controller
	recorder *MockclientMockRecorder
	isgomock struct{}
}

// MockclientMockRecorder is the mock recorder for Mockclient.
type MockclientMockRecorder struct {
	mock *Mockclient
}

// NewMockclient creates a new mock instance.
func NewMockclient(ctrl *gomock.Controller) *Mockclient {
	mock := &Mockclient{ctrl: ctrl}
	mock.recorder = &MockclientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockclient) EXPECT() *MockclientMockRecorder {
	return m.recorder
}

// CreateWidget mocks base method.
func (m *Mockclient) CreateWidget(name string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWidget", name)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWidget indicates an expected call of CreateWidget.
func (mr *MockclientMockRecorder) CreateWidget(name any) *MockclientCreateWidgetCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWidget", reflect.TypeOf((*Mockclient)(nil).CreateWidget), name)
	return &MockclientCreateWidgetCall{Call: call}
}

// MockclientCreateWidgetCall wrap *gomock.Call
type MockclientCreateWidgetCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockclientCreateWidgetCall) Return(arg0 string, arg1 error) *MockclientCreateWidgetCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockclientCreateWidgetCall) Do(f func(string) (string, error)) *MockclientCreateWidgetCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockclientCreateWidgetCall) DoAndReturn(f func(string) (string, error)) *MockclientCreateWidgetCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
